{"version":3,"sources":["Sounds/Bass-Drum-Hit-Level-6c.mp3","Sounds/Crash-Cymbal-Hit-B.mp3","Sounds/Drum-Sticks-Hit-C.mp3","Sounds/Hi-Hat-Open-Hit-C3.mp3","Sounds/Ride-Cymbal-Wash-Crescendo.mp3","Sounds/Ride-Cymbal-Bell-Hit-D.mp3","Sounds/Snare-Drum-Hit-Level-6b.mp3","Sounds/Small-Tom-Drum-Hit-Level-4A.mp3","Sounds/Ride-Cymbal-Metal-Slide-Scrape-A.mp3","Components/drumMachine.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Drums","props","state","description","id","onKeyPress","e","pressKey","className","onClick","playSound","src","BassDrum","CrashCymbal","DrumSticks","HiHat","RideCymbal","SnareDrum","RideCymbalD","SmallTomDrum","RideCymbalMetal","this","sound","desc","document","getElementById","play","setState","event","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,8D,mVCsN5BC,E,kDA1MX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,YAAa,IAHH,E,qDAOR,IAAD,OACL,OAAQ,yBAAKC,GAAG,eAAeC,WAAY,SAACC,GAAD,OAAO,EAAKC,SAASD,KAC5D,yBAAKF,GAAG,QACJ,4BAAQI,UAAU,WACdC,QAAS,kBAAM,EAAKC,UAAU,IAAK,aACnCN,GAAG,YAFP,IAII,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKC,OAIb,4BACIJ,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,iBACnCN,GAAG,eAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKE,OAIb,4BACIL,UAAU,WACVJ,GAAG,aACHK,QAAS,kBAAM,EAAKC,UAAU,IAAK,iBAHvC,IAKI,2BACIF,UAAU,OACVJ,GAAG,IACHO,IAAKG,OAIb,6BACA,4BACIN,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,WACnCN,GAAG,SAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKI,OAIb,4BACIP,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,gBACnCN,GAAG,cAHP,IAKG,2BACKI,UAAU,OACVJ,GAAG,IACHO,IAAKK,OAIb,4BACIR,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,eACnCN,GAAG,aAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKM,OAIb,6BACA,4BACIT,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,kBACnCN,GAAG,eAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKO,OAIb,4BACIV,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,mBACnCN,GAAG,gBAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKQ,OAIb,4BACIX,UAAU,WACVC,QAAS,kBAAM,EAAKC,UAAU,IAAK,sBACnCN,GAAG,mBAHP,IAKI,2BACII,UAAU,OACVJ,GAAG,IACHO,IAAKS,QAKjB,yBAAKhB,GAAG,WACJ,4BAAKiB,KAAKnB,MAAMC,iB,gCAKlBmB,EAAOC,GACLC,SAASC,eAAeH,GAC9BI,OACFL,KAAKM,SAAS,CACVxB,YAAaoB,M,+BAIZK,GACL,OAAOA,EAAMC,KACT,IAAK,IACDR,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,KACf,MACJ,IAAK,IACDW,KAAKX,UAAU,U,GA7LXoB,aCELC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFf,SAASC,eAAe,SDyHpB,kBAAmBe,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4a7563fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bass-Drum-Hit-Level-6c.a53dc6e6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Crash-Cymbal-Hit-B.0730cbe3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Drum-Sticks-Hit-C.c7857e8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Hi-Hat-Open-Hit-C3.14adc01d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ride-Cymbal-Wash-Crescendo.7f976709.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ride-Cymbal-Bell-Hit-D.3a70ad6c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Snare-Drum-Hit-Level-6b.6257fa7d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Small-Tom-Drum-Hit-Level-4A.d8674346.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ride-Cymbal-Metal-Slide-Scrape-A.fe7b8c73.mp3\";","import React, { Component } from 'react';\nimport BassDrum from '../Sounds/Bass-Drum-Hit-Level-6c.mp3'\nimport CrashCymbal from '../Sounds/Crash-Cymbal-Hit-B.mp3'\nimport DrumSticks from '../Sounds/Drum-Sticks-Hit-C.mp3'\nimport HiHat from '../Sounds/Hi-Hat-Open-Hit-C3.mp3'\nimport RideCymbal from '../Sounds/Ride-Cymbal-Wash-Crescendo.mp3'\nimport RideCymbalD from '../Sounds/Ride-Cymbal-Bell-Hit-D.mp3'\nimport SnareDrum from '../Sounds/Snare-Drum-Hit-Level-6b.mp3'\nimport SmallTomDrum from '../Sounds/Small-Tom-Drum-Hit-Level-4A.mp3'\nimport RideCymbalMetal from '../Sounds/Ride-Cymbal-Metal-Slide-Scrape-A.mp3'\n\nclass Drums extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            description: \"\"\n        };\n    }\n    \n    render() { \n        return (<div id=\"drum-machine\" onKeyPress={(e) => this.pressKey(e)}>\n            <div id=\"pads\">\n                <button className=\"drum-pad\" \n                    onClick={() => this.playSound(\"Q\", \"BassDrum\")}\n                    id=\"BassDrum\">\n                    Q\n                    <audio \n                        className=\"clip\" \n                        id=\"Q\"\n                        src={BassDrum}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"W\", \"Crash Cymbal\")}\n                    id=\"CrashCymbal\">\n                    W\n                    <audio \n                        className=\"clip\" \n                        id=\"W\"\n                        src={CrashCymbal}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    id=\"DrumSticks\"\n                    onClick={() => this.playSound(\"E\", \"Drum Sticks\")}>\n                    E\n                    <audio \n                        className=\"clip\" \n                        id=\"E\"\n                        src={DrumSticks}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <br/>\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"A\", \"Hi Hat\")}\n                    id=\"HiHat\">\n                    A\n                    <audio \n                        className=\"clip\" \n                        id=\"A\"\n                        src={HiHat}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"S\", \"Ride Cymbal\")}\n                    id=\"RideCymbal\">\n                   S \n                   <audio \n                        className=\"clip\" \n                        id=\"S\"\n                        src={RideCymbal}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"D\", \"Snare Drum\")}\n                    id=\"SnareDrum\">\n                    D\n                    <audio \n                        className=\"clip\" \n                        id=\"D\"\n                        src={SnareDrum}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <br/>\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"Z\", \"Ride Cymbal D\")}\n                    id=\"RideCymbalD\">\n                    Z\n                    <audio \n                        className=\"clip\" \n                        id=\"Z\"\n                        src={RideCymbalD}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"X\", \"Small Tom Drum\")}\n                    id=\"SmallTomDrum\">\n                    X\n                    <audio \n                        className=\"clip\" \n                        id=\"X\"\n                        src={SmallTomDrum}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n                <button \n                    className=\"drum-pad\" \n                    onClick={() => this.playSound(\"C\", \"Ride Cymbal Metal\")}\n                    id=\"RideCymbalMetal\">\n                    C\n                    <audio \n                        className=\"clip\" \n                        id=\"C\"\n                        src={RideCymbalMetal}>\n                    </audio>\n                </button>\n                {/**********************************************************/}\n            </div>\n            <div id=\"display\">\n                <h1>{this.state.description}</h1>\n            </div>\n        </div>);\n    }\n\n    playSound(sound, desc){\n        var s = document.getElementById(sound);\n        s.play();\n        this.setState({\n            description: desc\n        })\n    }\n\n    pressKey(event){\n        switch(event.key){\n            case \"Q\":\n                this.playSound(\"Q\");\n                break;\n            case \"W\":\n                this.playSound(\"W\");\n                break;\n            case \"E\":\n                this.playSound(\"E\");\n                break;\n            case \"A\":\n                this.playSound(\"A\");\n                break;\n            case \"S\":\n                this.playSound(\"S\");\n                break;\n            case \"D\":\n                this.playSound(\"D\");\n                break;\n            case \"Z\":\n                this.playSound(\"Z\");\n                break;\n            case \"X\":\n                this.playSound(\"X\");\n                break;\n            case \"C\":\n                this.playSound(\"C\");\n                break;\n            case \"q\":\n                this.playSound(\"Q\");\n                break;\n            case \"w\":\n                this.playSound(\"W\");\n                break;\n            case \"e\":\n                this.playSound(\"E\");\n                break;\n            case \"a\":\n                this.playSound(\"A\");\n                break;\n            case \"s\":\n                this.playSound(\"S\");\n                break;\n            case \"d\":\n                this.playSound(\"D\");\n                break;\n            case \"z\":\n                this.playSound(\"Z\");\n                break;\n            case \"x\":\n                this.playSound(\"X\");\n                break;\n            case \"c\":\n                this.playSound(\"C\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    // soundDescription(newVal){\n    //     this.setState({\n    //         description: newVal\n    //     });\n    // }\n}\n \nexport default Drums;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport DrumMachine from './Components/drumMachine'\n\nfunction App() {\n  return (\n    <div >\n      <DrumMachine/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}